@page "/newuser"

@using GlobalApp.Models
@using GlobalApp.Services
@inject UserDatabase UserDb
@inject NavigationManager Nav

<div class="newuser-container">
    <div class="newuser-box">
        <h3>Crear Nuevo Usuario</h3>

        <!-- Formulario de nuevo usuario -->
        <div class="form-group">
            <label for="username">Usuario</label>
            <input id="username" @bind="newUsername" class="form-control" placeholder="Usuario" />
        </div>
        <div class="form-group">
            <label for="password">Contraseña</label>
            <input id="password" @bind="newPassword" type="password" class="form-control" placeholder="Contraseña" />
        </div>
        <div class="form-group">
            <label for="confirmPassword">Repetir Contraseña</label>
            <input id="confirmPassword" @bind="confirmPassword" type="password" class="form-control" placeholder="Repetir Contraseña" />
        </div>

        <!-- Botón de guardar -->
        <button @onclick="OnCreateUserClicked" class="btn btn-primary">Guardar</button>

        <!-- Mensaje de error -->
        @if (!string.IsNullOrEmpty(error))
        {
            <p class="text-danger">@error</p>
        }

        <!-- Enlace a login -->
        <p class="text-muted">
            <a href="/login">¿Ya tienes una cuenta? Inicia sesión</a>
        </p>
    </div>
</div>

@code {
    private string newUsername = "";
    private string newPassword = "";
    private string confirmPassword = "";
    private string? error;

    private async Task OnCreateUserClicked()
    {
        // Verificar que las contraseñas coincidan
        if (newPassword != confirmPassword)
        {
            error = "Las contraseñas no coinciden.";
            return;
        }

        // Verificar que el usuario no exista
        var existingUser = await UserDb.GetUserAsync(newUsername, newPassword);
        if (existingUser != null)
        {
            error = "El usuario ya existe.";
            return;
        }

        // Crear un nuevo usuario y guardarlo
        var newUser = new User
        {
            Username = newUsername,
            Password = newPassword
        };

        await UserDb.SaveUserAsync(newUser);

        // Redirigir al login después de crear el usuario
        Nav.NavigateTo("/login");
    }
}
